name: CI Workflow

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
        poetry-version: ["1.1.13"]
    env:
      PYTHONPATH: src/

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-pip

      - name: Setup poetry cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Setup pre-commit cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Setup poetry ${{matrix.poetry-version}}
        run: pip install poetry==${{matrix.poetry-version}}

      - name: Install dependencies
        run: |
          poetry install

      - name: Check code quality
        run: |
          poetry run invoke check --all-files

      - name: Test code
        run: |
          poetry run invoke tests
